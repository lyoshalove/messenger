# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type MessageEntity {
  id: String!
  message: String!
  read: Boolean!
  chat: [ChatsEntity!]!
  userFrom: UsersEntity!
  createdAt: String!
}

type ChatsEntity {
  id: String!
  users: [UsersEntity!]!
  messages: [MessageEntity!]
  unreadMessagesCount: Int!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type FilesEntity {
  id: String!
  fileName: String!
}

type UsersEntity {
  id: String!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  avatar: FilesEntity
  online: Boolean!
  createdAt: String!
}

type AuthModel {
  token: String!
}

type UserOnlineDto {
  id: String!
  online: Boolean!
}

type MessagesUpdated {
  chatId: String!
  messageIds: [String!]!
}

type Query {
  getHello: String!
  getMe: UsersEntity!
  getAllUsers: [UsersEntity!]!
  getUserById(id: String!): UsersEntity!
  getChatByIdWithMessages(id: String!): ChatsEntity!
  getMyChats: [ChatsEntity!]!
  getMyChatById(id: String!): ChatsEntity!
}

type Mutation {
  updateUser(input: UpdateInput!, file: Upload): AuthModel!
  updatePassword(input: updatePasswordInput!): Boolean!
  registration(input: SignUpDto!): AuthModel!
  login(input: SignInDto!): AuthModel!
  createChat(userToId: String!): ChatsEntity!
  sendMessage(input: MessageCreateDto!): MessageEntity!
  setMessagesRead(messageIds: [String!]!, chatId: String!): Boolean!
}

input UpdateInput {
  email: String!
  firstName: String!
  lastName: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input updatePasswordInput {
  oldPassword: String!
  newPassword: String!
  confirmPassword: String!
}

input SignUpDto {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input SignInDto {
  email: String!
  password: String!
}

input MessageCreateDto {
  chatId: String!
  message: String!
}

type Subscription {
  userOnline: UserOnlineDto!
  chatUpdated(userId: String!): ChatsEntity!
  messagesUpdated(chatId: String!): MessagesUpdated!
  messageSent(chatId: String!): MessageEntity!
}